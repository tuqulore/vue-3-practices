import{o as a,c as l,k as n,q as u,s as r,A as s,e as t,a9 as e}from"./modules/vue-Vzo9laBR.js";import{I as h}from"./slidev/default-FuLcE4H4.js";import{u as i,f as p}from"./slidev/context-DJIb-KhO.js";import"./index-D5yhVQ8j.js";import"./modules/shiki-DbOaBu0s.js";const _=t("h1",null,"Vue + Vue Router と Nuxt 3 の比較（データ取得）",-1),d=t("p",null,"便利だが素朴にFetch APIを使う場合と挙動が異なるので注意が必要",-1),f=t("p",null,[e("Nuxt 3におけるHTTP APIクライアントは、Fetch APIをラップ：Fetch API使用時便利な処理があらかじめ実装された "),t("a",{href:"https://github.com/unjs/ofetch",target:"_blank"},"ofetch"),e(" が使われている。以下重要な点や便利な点を挙げる")],-1),m=t("ul",null,[t("li",null,[e("useFetch は "),t("a",{href:"https://nuxt.com/docs/api/utils/dollarfetch",target:"_blank"},"$fetch"),e(" を使用しており、$fetch は ofetch と等価")]),t("li",null,"レスポンスボディが JSON 形式なら JS オブジェクトにしてくれる"),t("li",null,"2xx HTTP ステータスでないときエラーを投げてくれる")],-1),x=t("p",null,[e("useFetchはサーバーサイドレンダリング（SSR）：データをあらかじめサーバーで取得してブラウザーにレスポンスとして返すとき、取得URLをパスのみ（例："),t("code",null,'"/api/count"'),e("）にすると Nuxt が管理するエンドポイント：末端、この場合URLかどうかチェックする。つまり取得先がpagesディレクトリやserverディレクトリで作成したページやAPIエンドポイントである必要がある。")],-1),$=t("p",null,[e("useFetchをSSRで実行しない（serverオプションを"),t("code",null,"false"),e("にする）こともできる。詳細は公式ドキュメントを参照のこと "),t("a",{href:"https://nuxt.com/docs/api/composables/use-fetch",target:"_blank"},"https://nuxt.com/docs/api/composables/use-fetch")],-1),P=t("p",null,"fetchを使うこともできるが、Nuxt 3を使うならuseFetchや$fetchが便利。ただし、SSRの挙動が複雑で意図しない動作時エラーが生じることもあるので注意しよう",-1),S={__name:"slides.md__slidev_72",setup(k){const{$slidev:g,$nav:F,$clicksContext:o,$clicks:I,$page:N,$renderContext:R,$frontmatter:c}=i();return o.setup(),(b,v)=>(a(),l(h,u(r(s(p)(s(c),71))),{default:n(()=>[_,d,f,m,x,$,P]),_:1},16))}},L=S;export{L as default};
