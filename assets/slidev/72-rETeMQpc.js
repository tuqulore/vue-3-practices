import{o as c,c as a,k as r,q as l,s as n,A as o,e,$ as t}from"../modules/vue-X53O9vh8.js";import{I as u}from"./default-yYo_Y0Xe.js";import{b as h,aS as s}from"../index-muK01MNA.js";import{p,u as _,f as i}from"./context-h85bgQuy.js";import"../modules/shiki-aLti4ydI.js";const f=e("h1",null,"Vue + Vue Router と Nuxt 3 の比較（データ取得）",-1),d=e("p",null,"便利だが素朴にFetch APIを使う場合と挙動が異なるので注意が必要",-1),m=e("p",null,[t("Nuxt 3におけるHTTP APIクライアントは、Fetch APIをラップ：Fetch API使用時便利な処理があらかじめ実装された "),e("a",{href:"https://github.com/unjs/ofetch",target:"_blank",rel:"noopener"},"ofetch"),t(" が使われている。以下重要な点や便利な点を挙げる")],-1),x=e("ul",null,[e("li",null,[t("useFetch は "),e("a",{href:"https://nuxt.com/docs/api/utils/dollarfetch",target:"_blank",rel:"noopener"},"$fetch"),t(" を使用しており、$fetch は ofetch と等価")]),e("li",null,"レスポンスボディが JSON 形式なら JS オブジェクトにしてくれる"),e("li",null,"2xx HTTP ステータスでないときエラーを投げてくれる")],-1),P=e("p",null,[t("useFetchはサーバーサイドレンダリング（SSR）：データをあらかじめサーバーで取得してブラウザーにレスポンスとして返すとき、取得URLをパスのみ（例："),e("code",null,'"/api/count"'),t("）にすると Nuxt が管理するエンドポイント：末端、この場合URLかどうかチェックする。つまり取得先がpagesディレクトリやserverディレクトリで作成したページやAPIエンドポイントである必要がある。")],-1),S=e("p",null,[t("useFetchをSSRで実行しない（serverオプションを"),e("code",null,"false"),t("にする）こともできる。詳細は公式ドキュメントを参照のこと "),e("a",{href:"https://nuxt.com/docs/api/composables/use-fetch",target:"_blank",rel:"noopener"},"https://nuxt.com/docs/api/composables/use-fetch")],-1),F=e("p",null,"fetchを使うこともできるが、Nuxt 3を使うならuseFetchや$fetchが便利。ただし、SSRの挙動が複雑で意図しない動作時エラーが生じることもあるので注意しよう",-1),b={__name:"72",setup(I){return p(s),_(),(N,R)=>(c(),a(u,l(n(o(i)(o(s),71))),{default:r(()=>[f,d,m,x,P,S,F]),_:1},16))}},V=h(b,[["__file","/@slidev/slides/72.md"]]);export{V as default};
