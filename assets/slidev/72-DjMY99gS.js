import{o as c,c as a,k as l,q as n,s as u,A as s,e as t,a6 as e}from"../modules/vue-Cv1tNwCo.js";import{I as r}from"./default-C1JVo864.js";import{u as h,f as p}from"./context-CTfwz8kz.js";import"../index-DOlwpd_h.js";import"../modules/shiki-joiPqqgE.js";const i=t("h1",null,"Vue + Vue Router と Nuxt 3 の比較（データ取得）",-1),_=t("p",null,"便利だが素朴にFetch APIを使う場合と挙動が異なるので注意が必要",-1),f=t("p",null,[e("Nuxt 3におけるHTTP APIクライアントは、Fetch APIをラップ：Fetch API使用時便利な処理があらかじめ実装された "),t("a",{href:"https://github.com/unjs/ofetch",target:"_blank"},"ofetch"),e(" が使われている。以下重要な点や便利な点を挙げる")],-1),d=t("ul",null,[t("li",null,[e("useFetch は "),t("a",{href:"https://nuxt.com/docs/api/utils/dollarfetch",target:"_blank"},"$fetch"),e(" を使用しており、$fetch は ofetch と等価")]),t("li",null,"レスポンスボディが JSON 形式なら JS オブジェクトにしてくれる"),t("li",null,"2xx HTTP ステータスでないときエラーを投げてくれる")],-1),m=t("p",null,[e("useFetchはサーバーサイドレンダリング（SSR）：データをあらかじめサーバーで取得してブラウザーにレスポンスとして返すとき、取得URLをパスのみ（例："),t("code",null,'"/api/count"'),e("）にすると Nuxt が管理するエンドポイント：末端、この場合URLかどうかチェックする。つまり取得先がpagesディレクトリやserverディレクトリで作成したページやAPIエンドポイントである必要がある。")],-1),x=t("p",null,[e("useFetchをSSRで実行しない（serverオプションを"),t("code",null,"false"),e("にする）こともできる。詳細は公式ドキュメントを参照のこと "),t("a",{href:"https://nuxt.com/docs/api/composables/use-fetch",target:"_blank"},"https://nuxt.com/docs/api/composables/use-fetch")],-1),P=t("p",null,"fetchを使うこともできるが、Nuxt 3を使うならuseFetchや$fetchが便利。ただし、SSRの挙動が複雑で意図しない動作時エラーが生じることもあるので注意しよう",-1),B={__name:"72",setup($){const{$slidev:S,$nav:k,$clicksContext:g,$clicks:F,$page:I,$renderContext:N,$frontmatter:o}=h();return(R,b)=>(c(),a(r,n(u(s(p)(s(o),71))),{default:l(()=>[i,_,f,d,m,x,P]),_:1},16))}};export{B as default};
