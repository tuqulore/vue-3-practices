import{b as u,o as c,w as r,g as t,ad as e,v as n,x as p,T as o}from"./modules/vue-DtSmzeM3.js";import{I as h}from"./slidev/default-Dzmv9YgT.js";import{u as f,f as i}from"./slidev/context-DnQf6Pd1.js";import"./index-DjlZ68DI.js";import"./modules/shiki-3_FXpx2p.js";const g={__name:"slides.md__slidev_86",setup(m){const{$clicksContext:l,$frontmatter:a}=f();return l.setup(),(d,s)=>(c(),u(h,n(p(o(i)(o(a),85))),{default:r(()=>s[0]||(s[0]=[t("h1",null,"Vue + Vue Router と Nuxt の比較（データ取得）",-1),t("p",null,"便利だが素朴にFetch APIを使う場合と挙動が異なるので注意が必要",-1),t("p",null,[e("NuxtにおけるHTTP APIクライアントは、Fetch APIをラップ：Fetch API使用時便利な処理があらかじめ実装された "),t("a",{href:"https://github.com/unjs/ofetch",target:"_blank"},"ofetch"),e(" が使われている。以下重要な点や便利な点を挙げる")],-1),t("ul",null,[t("li",null,[e("useFetch は "),t("a",{href:"https://nuxt.com/docs/api/utils/dollarfetch",target:"_blank"},"$fetch"),e(" を使用しており、$fetch は ofetch と等価")]),t("li",null,"レスポンスボディが JSON 形式なら JS オブジェクトにしてくれる"),t("li",null,"2xx HTTP ステータスでないときエラーを投げてくれる")],-1),t("p",null,[e("useFetchはサーバーサイドレンダリング（SSR）：データをあらかじめサーバーで取得してブラウザーにレスポンスとして返すとき、取得URLをパスのみ（例："),t("code",null,'"/api/count"'),e("）にすると Nuxt が管理するエンドポイント：末端、この場合URLかどうかチェックする。つまり取得先がpagesディレクトリやserverディレクトリで作成したページやAPIエンドポイントである必要がある。")],-1),t("p",null,[e("useFetchをSSRで実行しない（serverオプションを"),t("code",null,"false"),e("にする）こともできる。詳細は公式ドキュメントを参照のこと "),t("a",{href:"https://nuxt.com/docs/api/composables/use-fetch",target:"_blank"},"https://nuxt.com/docs/api/composables/use-fetch")],-1),t("p",null,"fetchを使うこともできるが、Nuxtを使うならuseFetchや$fetchが便利。ただし、SSRの挙動が複雑で意図しない動作時エラーが生じることもあるので注意しよう",-1)])),_:1},16))}};export{g as default};
